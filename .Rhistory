}
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
## Return hospital name in that state with the given rank
## 30-day death rate
if(!is.element(state, data$State)) {
stop("invalid state")
} else if(outcome == "heart attack") {
data_state <- subset(data, State == state)
data_state[data_state == "Not Available"] = NA_character_
data_state[, 11] <- as.numeric(data_state[, 11])
good <- complete.cases(data_state[, 11])
data_state <- data_state[good, ]
ranking <- data_state[order(data_state[, 11], data_state[, 2]), ]
if(num == "best") {
answer <- ranking[1, 2]
} else if(num == "worst") {
last <- nrow(ranking)
answer <- ranking[last, 2]
} else if(num > nrow(ranking)) {
answer <- NA_character_
} else {
answer <- ranking[num, 2]
}
answer
} else if(outcome == "heart failure") {
data_state <- subset(data, State == state)
data_state[data_state == "Not Available"] = NA_character_
data_state[, 17] <- as.numeric(data_state[, 17])
good <- complete.cases(data_state[, 17])
data_state <- data_state[good, ]
ranking <- data_state[order(data_state[, 17], data_state[, 2]), ]
if(num == "best") {
answer <- ranking[1, 2]
} else if(num == "worst") {
last <- nrow(ranking)
answer <- ranking[last, 2]
} else if(num > nrow(ranking)) {
answer <- NA_character_
} else {
answer <- ranking[num, 2]
}
answer
} else if(outcome == "pneumonia") {
data_state <- subset(data, State == state)
data_state[data_state == "Not Available"] = NA_character_
data_state[, 23] <- as.numeric(data_state[, 23])
good <- complete.cases(data_state[, 23])
data_state <- data_state[good, ]
ranking <- data_state[order(data_state[, 23], data_state[, 2]), ]
if(num == "best") {
answer <- ranking[1, 2]
} else if(num == "worst") {
last <- nrow(ranking)
answer <- ranking[last, 2]
} else if(num > nrow(ranking)) {
answer <- NA_character_
} else {
answer <- ranking[num, 2]
}
answer
} else {
stop("invalid outcome")
}
}
rankhospital("TX", "heart failure", 4)
submit()
submit()
submit()
submit()
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
min <- NULL
help_function <- function(x) {
data_state <- subset(data, State == state)
data_state[data_state == "Not Available"] = NA_character_
data_state[, x] <- as.numeric(data_state[, x])
good <- complete.cases(data_state[, x])
data_state <- data_state[good, ]
min <- data_state$Hospital.Name[which.min(data_state[, x])]
min
}
## Check that state and outcome are valid
if(!is.element(state, data$State)) {
stop("invalid state")
} else if(outcome == "heart attack") {
help_function(11)
} else if(outcome == "heart failure") {
help_function(17)
} else if(outcome == "pneumonia") {
help_function(23)
} else {
stop("invalid outcome")
}
}
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
best("BB", "hert attack")
submit()
submit()
submit()
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
help_function <- function(x) {
data_state <- subset(data, State == state)
data_state[data_state == "Not Available"] = NA_character_
data_state[, x] <- as.numeric(data_state[, x])
good <- complete.cases(data_state[, x])
data_state <- data_state[good, ]
ranking <- data_state[order(data_state[, x], data_state[, 2]), ]
if(num == "best") {
answer <- ranking[1, 2]
} else if(num == "worst") {
last <- nrow(ranking)
answer <- ranking[last, 2]
} else if(num > nrow(ranking)) {
answer <- NA_character_
} else {
answer <- ranking[num, 2]
}
answer
}
## Check that state and outcome are valid
## Return hospital name in that state with the given rank
## 30-day death rate
if(!is.element(state, data$State)) {
stop("invalid state")
} else if(outcome == "heart attack") {
help_function(11)
} else if(outcome == "heart failure") {
help_function(17)
} else if(outcome == "pneumonia") {
help_function(23)
} else {
stop("invalid outcome")
}
}
rankhospital("TX", "heart attack", "worst")
rankhospital("TX", "heart attack", 4)
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
submit()
submit()
submit()
submit()
?split
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data2 <- data[, 2 && 17]
data2
clear
clear()
class(data)
data2 <- data[, c(2, 11, 17, 23)]
data2
data3 <- data2[, 5]
data3 <- data2[, 4]
data3 <- data2[, c(3, 4)]
data2 <- data[, c(2, 7, 11, 17, 23)]
split(data2, data2$State)
data3 <- split(data2, data2$State)
names(data3)
length(data3)
class(data3)
class(data3$AK)
class(data3$1)
class(data3[[1]])
class(data3[1])
class(data3[[1])
class(data3[[1]])
data3[[1]][data3[[1]] == "Not Available"] = NA_character_
data3[[1]]
rankall <- function(outcome, num = "best") {
## Read outcome data
raw_data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data <- raw_data[, c(2, 7, 11, 17, 23)]
help_function <- function(x) {
split_data <- split(data, data$State)
for(i in 1:length(split_data)) {
split_data[[i]][split_data[[i]] == "Not Available"] = NA_character_
split_data[[i]][, x] <- as.numeric(split_data[[i]][, x])
good <- complete.cases(split_data[[i]][, x])
split_data[[i]] <- split_data[[1]][good, ]
ranking <- split_data[[1]][order(split_data[[i]][, x], split_data[[1]][, 1]), ]
if(num == "best") {
answer <- ranking[1, 1]
} else if(num == "worst") {
last <- nrow(ranking)
answer <- ranking[last, 1]
} else if(num > nrow(ranking)) {
answer <- NA_character_
} else {
answer <- ranking[num, 1]
}
answer
}
}
if(outcome == "heart attack"){
help_function(3)
} else if(outcome == "heart failure") {
help_function(4)
} else if(outcome == "pneumonia") {
help_function(5)
} else {
stop("invalid outcome")
}
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
}
rankall("heart attack", 1)
rankall <- function(outcome, num = "best") {
## Read outcome data
raw_data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data <- raw_data[, c(2, 7, 11, 17, 23)]
help_function <- function(x) {
split_data <- split(data, data$State)
for(i in 1:length(split_data)) {
split_data[[i]][split_data[[i]] == "Not Available"] = NA_character_
split_data[[i]][, x] <- as.numeric(split_data[[i]][, x])
good <- complete.cases(split_data[[i]][, x])
split_data[[i]] <- split_data[[i]][good, ]
ranking <- split_data[[i]][order(split_data[[i]][, x], split_data[[i]][, 1]), ]
if(num == "best") {
answer <- ranking[1, 1]
} else if(num == "worst") {
last <- nrow(ranking)
answer <- ranking[last, 1]
} else if(num > nrow(ranking)) {
answer <- NA_character_
} else {
answer <- ranking[num, 1]
}
answer
}
}
if(outcome == "heart attack"){
help_function(3)
} else if(outcome == "heart failure") {
help_function(4)
} else if(outcome == "pneumonia") {
help_function(5)
} else {
stop("invalid outcome")
}
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
}
rankall("heart attack", 1)
rankall <- function(outcome, num = "best") {
## Read outcome data
raw_data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data <- raw_data[, c(2, 7, 11, 17, 23)]
help_function <- function(x) {
split_data <- split(data, data$State)
for(i in 1:length(split_data)) {
split_data[[i]][split_data[[i]] == "Not Available"] = NA_character_
split_data[[i]][, x] <- as.numeric(split_data[[i]][, x])
good <- complete.cases(split_data[[i]][, x])
split_data[[i]] <- split_data[[i]][good, ]
ranking <- split_data[[i]][order(split_data[[i]][, x], split_data[[i]][, 1]), ]
if(num == "best") {
answer <- ranking[1, 1]
} else if(num == "worst") {
last <- nrow(ranking)
answer <- ranking[last, 1]
return(answer)
} else if(num > nrow(ranking)) {
answer <- NA_character_
return(answer)
} else {
answer <- ranking[num, 1]
return(answer)
}
}
}
if(outcome == "heart attack"){
help_function(3)
} else if(outcome == "heart failure") {
help_function(4)
} else if(outcome == "pneumonia") {
help_function(5)
} else {
stop("invalid outcome")
}
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
}
rankall("heart attack", 1)
x <- data.frame(,2, colnames(hospital, state))
x <- read.table(text = "",)
colClasses = c("character", "character")
col.names = c("hospital", "state")
x <- read.table(text = "",
colClasses = colClasses,
col.names = col.names)
x
class(x)
rankall <- function(outcome, num = "best") {
## Read outcome data
raw_data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data <- raw_data[, c(2, 7, 11, 17, 23)]
colClasses = c("character", "character")
col.names = c("hospital", "state")
final <- read.table(text = "",
colClasses = colClasses,
col.names = col.names)
help_function <- function(x) {
split_data <- split(data, data$State)
for(i in 1:54) {
split_data[[i]][split_data[[i]] == "Not Available"] = NA_character_
split_data[[i]][, x] <- as.numeric(split_data[[i]][, x])
good <- complete.cases(split_data[[i]][, x])
split_data[[i]] <- split_data[[i]][good, ]
ranking <- split_data[[i]][order(split_data[[i]][, x], split_data[[i]][, 1]), ]
if(num == "best") {
hospital_name <- ranking[1, 1]
} else if(num == "worst") {
last <- nrow(ranking)
hospital_name <- ranking[last, 1]
} else if(num > nrow(ranking)) {
hospital_name <- NA_character_
} else {
hospital_name <- ranking[num, 1]
}
final <- c(final, hospital_name)
final <- c(final, split_data[[i]][1,2])
}
print(final)
}
if(outcome == "heart attack"){
help_function(3)
} else if(outcome == "heart failure") {
help_function(4)
} else if(outcome == "pneumonia") {
help_function(5)
} else {
stop("invalid outcome")
}
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
}
rankall("heart attack", 1)
x <- rankall("heart attack", 1)
class(x)
rankall <- function(outcome, num = "best") {
## Read outcome data
raw_data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data <- raw_data[, c(2, 7, 11, 17, 23)]
colClasses = c("character", "character")
col.names = c("hospital", "state")
#final <- read.table(text = "",
#                    colClasses = colClasses,
#                    col.names = col.names)
final_hospital <- character()
final_state <- character()
help_function <- function(x) {
split_data <- split(data, data$State)
for(i in 1:54) {
split_data[[i]][split_data[[i]] == "Not Available"] = NA_character_
split_data[[i]][, x] <- as.numeric(split_data[[i]][, x])
good <- complete.cases(split_data[[i]][, x])
split_data[[i]] <- split_data[[i]][good, ]
ranking <- split_data[[i]][order(split_data[[i]][, x], split_data[[i]][, 1]), ]
if(num == "best") {
hospital_name <- ranking[1, 1]
} else if(num == "worst") {
last <- nrow(ranking)
hospital_name <- ranking[last, 1]
} else if(num > nrow(ranking)) {
hospital_name <- NA_character_
} else {
hospital_name <- ranking[num, 1]
}
final_hospital <- c(final_hospital, hospital_name)
final_state <- c(final_state, split_data[[i]][1,2])
}
final <- data.frame(final_hospital, final_state,
colClasses = colClasses,
col.names = col.names)
print(final)
}
if(outcome == "heart attack"){
help_function(3)
} else if(outcome == "heart failure") {
help_function(4)
} else if(outcome == "pneumonia") {
help_function(5)
} else {
stop("invalid outcome")
}
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
}
rankall("heart attack", 1)
rankall <- function(outcome, num = "best") {
## Read outcome data
raw_data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data <- raw_data[, c(2, 7, 11, 17, 23)]
hospital <- character()
state <- character()
help_function <- function(x) {
split_data <- split(data, data$State)
for(i in 1:54) {
split_data[[i]][split_data[[i]] == "Not Available"] = NA_character_
split_data[[i]][, x] <- as.numeric(split_data[[i]][, x])
good <- complete.cases(split_data[[i]][, x])
split_data[[i]] <- split_data[[i]][good, ]
ranking <- split_data[[i]][order(split_data[[i]][, x], split_data[[i]][, 1]), ]
if(num == "best") {
hospital_name <- ranking[1, 1]
} else if(num == "worst") {
last <- nrow(ranking)
hospital_name <- ranking[last, 1]
} else if(num > nrow(ranking)) {
hospital_name <- NA_character_
} else {
hospital_name <- ranking[num, 1]
}
final_hospital <- c(final_hospital, hospital_name)
final_state <- c(final_state, split_data[[i]][1,2])
}
final <- data.frame(hospital, state)
print(final)
}
if(outcome == "heart attack"){
help_function(3)
} else if(outcome == "heart failure") {
help_function(4)
} else if(outcome == "pneumonia") {
help_function(5)
} else {
stop("invalid outcome")
}
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
}
rankall("heart attack", 1)
rankall <- function(outcome, num = "best") {
## Read outcome data
raw_data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data <- raw_data[, c(2, 7, 11, 17, 23)]
hospital <- character()
state <- character()
help_function <- function(x) {
split_data <- split(data, data$State)
for(i in 1:54) {
split_data[[i]][split_data[[i]] == "Not Available"] = NA_character_
split_data[[i]][, x] <- as.numeric(split_data[[i]][, x])
good <- complete.cases(split_data[[i]][, x])
split_data[[i]] <- split_data[[i]][good, ]
ranking <- split_data[[i]][order(split_data[[i]][, x], split_data[[i]][, 1]), ]
if(num == "best") {
hospital_name <- ranking[1, 1]
} else if(num == "worst") {
last <- nrow(ranking)
hospital_name <- ranking[last, 1]
} else if(num > nrow(ranking)) {
hospital_name <- NA_character_
} else {
hospital_name <- ranking[num, 1]
}
hospital <- c(hospital, hospital_name)
state <- c(state, split_data[[i]][1,2])
}
final <- data.frame(hospital, state)
print(final)
}
if(outcome == "heart attack"){
help_function(3)
} else if(outcome == "heart failure") {
help_function(4)
} else if(outcome == "pneumonia") {
help_function(5)
} else {
stop("invalid outcome")
}
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
}
rankall("heart attack", 1)
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
tail(rankall("pneumonia", 60), 3)
submit()
submit()
submit()
